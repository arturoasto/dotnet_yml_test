name: Test deploy per environment
on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: Select the environment
        required: true

env:
  RELEASE_NAME: App-Release

jobs:
  deploy:
    name: deploy
    strategy:
      matrix:
        projectName: [coding]
        kind: ['windows']
        include:
          - kind: windows
            os: windows-latest
            target: win-x64       
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: start publishing
        run: | 
          echo "environment is ${{ inputs.environment }}"
          echo "${{ matrix.projectName }} publishing"

      - name: build
        shell: bash
        run: | 
          # Build everything
          dotnet publish ${{ matrix.projectName }}/*.csproj --runtime "${{ matrix.target }}" -c Release -o "output_folder/${{ matrix.projectName }}"
          7z a -tzip "upload/${{ matrix.projectName }}.zip" ./output_folder/${{ matrix.projectName }}
          rm -r "output_folder"

      - uses: actions/upload-artifact@v3
        name: upload artifact for each project
        with: 
          name: ${{ matrix.projectName }}
          path: upload/${{ matrix.projectName }}.zip

  zipFiles:
    name: zipFiles
    needs: deploy
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v3
        name: get artifacts
        with:
          path: upload

      - name: show artifacts
        run: ls -R
        working-directory: upload

      - name: unzip artifacts
        shell: bash
        run: 7z x upload/*/*.zip -o./binaries

      - name: zip all together
        shell: bash
        run: 7z a -tzip release/final.zip ./binaries

      - name: show zip containing all binaries
        run: ls -R
        working-directory: release